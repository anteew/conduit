{
  "ampcode": "v1",
  "waves": [
    { "id": "Wave-Harness-Core", "parallel": true, "tasks": ["T3001-Plan-Testing", "T3002-Harness", "T3003-Fake-Payloads"] },
    { "id": "Wave-HTTP-Adapter", "parallel": true, "tasks": ["T3010-HTTP-Bidir", "T3011-HTTP-Errors", "T3012-HTTP-Mime"] },
    { "id": "Wave-WS-Adapter", "parallel": true, "tasks": ["T3020-WS-Bidir", "T3021-Flow-Credit", "T3022-WS-Errors"] },
    { "id": "Wave-Perf", "parallel": true, "tasks": ["T3030-Perf-Small", "T3031-Latency", "T3032-Large-Payload"] },
    { "id": "Wave-CI", "parallel": true, "tasks": ["T3040-CI-Smoke-Benches", "T3041-Coverage"] },
    { "id": "Wave-Docs", "parallel": true, "tasks": ["T3050-Testing-README", "T3051-Examples"] }
  ],
  "tasks": [
    {"id":"T3001-Plan-Testing","agent":"claude","title":"Write Testing Plan","why":"Shared understanding across agents","allowedFiles":["docs/testing/TESTING-PLAN.md"],"verify":["test -f docs/testing/TESTING-PLAN.md"],"deliverables":["Testing plan doc"]},
    {"id":"T3002-Harness","agent":"gemini","title":"Add test harness and helpers","why":"Reusable start/stop and HTTP/WS helpers","allowedFiles":["tests/harness.ts","package.json"],"verify":["node --loader ts-node/esm -e \"import('./tests/harness.ts').then(()=>console.log('ok'))\""],"deliverables":["Harness utilities"]},
    {"id":"T3003-Fake-Payloads","agent":"gemini","title":"Add fake payload generators","why":"Test various data shapes","allowedFiles":["scripts/gen-large-file.sh"],"verify":["./scripts/gen-large-file.sh 1 /tmp/blob.bin && test -s /tmp/blob.bin"],"deliverables":["Generator scripts"]},
    {"id":"T3010-HTTP-Bidir","agent":"gemini","title":"HTTP bidirectional tests","why":"Verify HTTP→IR and IR→HTTP","allowedFiles":["tests/http_bidir.test.ts","config/rules.yaml"],"verify":["npm run test:unit"],"deliverables":["Test passes and prints ok"]},
    {"id":"T3011-HTTP-Errors","agent":"gemini","title":"HTTP error mapping tests","why":"Predictable failures","allowedFiles":["tests/http_bidir.test.ts","config/rules.yaml"],"verify":["node --loader ts-node/esm tests/http_bidir.test.ts"],"deliverables":["Negative cases covered"]},
    {"id":"T3012-HTTP-Mime","agent":"gemini","title":"HTTP MIME handling tests","why":"Exercise content-types","allowedFiles":["tests/http_bidir.test.ts","config/rules.yaml"],"verify":["node --loader ts-node/esm tests/http_bidir.test.ts"],"deliverables":["JSON/plain/octet-stream cases"]},
    {"id":"T3020-WS-Bidir","agent":"gemini","title":"WS subscribe/deliver tests","why":"Verify WS mapping","allowedFiles":["tests/ws_bidir.test.ts","config/rules.yaml"],"verify":["npm run test:int"],"deliverables":["Test prints WS DELIVER ok"]},
    {"id":"T3021-Flow-Credit","agent":"gemini","title":"Flow control tests","why":"Ensure backpressure works","allowedFiles":["tests/ws_bidir.test.ts"],"verify":["node --loader ts-node/esm tests/ws_bidir.test.ts"],"deliverables":["Credit window honored"]},
    {"id":"T3022-WS-Errors","agent":"gemini","title":"WS error mapping tests","why":"Predictable WS semantics","allowedFiles":["tests/ws_bidir.test.ts"],"verify":["node --loader ts-node/esm tests/ws_bidir.test.ts"],"deliverables":["InvalidJSON/UnknownOp covered"]},
    {"id":"T3030-Perf-Small","agent":"gemini","title":"Small-message throughput benchmark","why":"Measure translator speed","allowedFiles":["tests/perf_small.test.ts"],"verify":["npm run bench:small"],"deliverables":["Throughput numbers"]},
    {"id":"T3031-Latency","agent":"gemini","title":"Latency measurement","why":"Understand p50/p95 under load","allowedFiles":["tests/perf_small.test.ts"],"verify":["npm run bench:small"],"deliverables":["Latency report"]},
    {"id":"T3032-Large-Payload","agent":"gemini","title":"Large payload test (100MB)","why":"Ensure streaming safety and responsiveness","allowedFiles":["tests/large_payload.test.ts","scripts/gen-large-file.sh","config/rules.yaml"],"verify":["npm run bench:large"],"deliverables":["Upload does not stall control plane; server responsive"]},
    {"id":"T3040-CI-Smoke-Benches","agent":"gemini","title":"CI smoke for tests/benches","why":"Green signals on PRs","allowedFiles":[".github/workflows/ci.yml"],"verify":["# CI runs npm run test:unit && npm run test:int"],"deliverables":["Workflow updated"]},
    {"id":"T3041-Coverage","agent":"claude","title":"Coverage and reporting","why":"Visibility into test breadth","allowedFiles":["README.md","docs/testing/TESTING-PLAN.md"],"verify":["# Manual: read coverage summary"],"deliverables":["Coverage summary in docs"]},
    {"id":"T3050-Testing-README","agent":"claude","title":"Write Testing README","why":"Make it easy to run locally","allowedFiles":["README.md","docs/testing/TESTING-PLAN.md"],"verify":["# Manual: copy-paste works"],"deliverables":["README testing section"]},
    {"id":"T3051-Examples","agent":"claude","title":"Add example rules for tests","why":"Self-contained examples","allowedFiles":["config/rules.yaml"],"verify":["# Manual: verify rule coverage"],"deliverables":["rules for all tested endpoints"]}
  ]
}
